/**
 * 예제 02: 주석 (Comments)
 * 
 * 목표: Java에서 주석을 작성하는 3가지 방법을 배웁니다.
 * 
 * 학습 내용:
 * 1. 한 줄 주석 (//)
 * 2. 여러 줄 주석 (/* */)
 * 3. 문서화 주석 (/** */)
 */

public class Example02_Comments {
    public static void main(String[] args) {
        // ===== 1. 한 줄 주석 (Single-line comment) =====
        // 이것은 한 줄 주석입니다.
        // 코드 설명이나 메모를 작성할 때 사용합니다.
        // 컴파일러는 이 부분을 무시합니다.
        
        System.out.println("주석 학습 중!"); // 코드 뒤에도 작성 가능
        
        
        /* ===== 2. 여러 줄 주석 (Multi-line comment) =====
         * 
         * 이것은 여러 줄 주석입니다.
         * 여러 줄에 걸쳐 설명이 필요할 때 사용합니다.
         * 
         * 장점:
         * - 긴 설명을 작성할 때 편리
         * - 여러 줄의 코드를 임시로 비활성화할 때 유용
         */
        
        System.out.println("여러 줄 주석도 무시됩니다!");
        
        
        /*
         * 코드 비활성화 예시:
         * 
         * System.out.println("이 코드는 실행되지 않습니다.");
         * System.out.println("주석 처리되었기 때문입니다.");
         */
        
        
        // ===== 3. 문서화 주석 (Javadoc comment) =====
        // 이 주석은 클래스 위에 작성되었습니다.
        // API 문서를 자동으로 생성할 때 사용됩니다.
        
        System.out.println("주석은 코드를 이해하는 데 도움을 줍니다!");
        
        
        // ===== 주석 작성 팁 =====
        // ✅ 좋은 주석: 코드의 "왜"를 설명
        int studentCount = 30; // 한 반의 학생 수를 저장
        
        // ❌ 나쁜 주석: 코드 그대로 반복
        int x = 30; // x에 30을 할당
        
        
        // ===== 주석의 활용 =====
        
        // TODO: 나중에 구현할 기능
        // TODO: 에러 처리 추가하기
        
        // FIXME: 버그 수정 필요
        // FIXME: 음수 입력 시 처리 안 됨
        
        // NOTE: 중요한 참고 사항
        // NOTE: 이 값은 설정 파일에서 가져옴
        
        System.out.println("주석 학습 완료!");
    }
}

/*
 * 💡 주석의 중요성:
 * 
 * 1. 코드 이해도 향상
 *    - 나중에 자신이나 다른 개발자가 코드를 쉽게 이해
 * 
 * 2. 유지보수 편의성
 *    - 복잡한 로직을 설명
 *    - 왜 이렇게 작성했는지 기록
 * 
 * 3. 협업 효율성
 *    - 팀원들과 의사소통 도구
 *    - TODO, FIXME 등으로 작업 관리
 * 
 * 🎯 주석 작성 원칙:
 * 
 * ✅ DO (해야 할 것):
 * - 복잡한 로직은 반드시 설명
 * - 왜 이렇게 구현했는지 작성
 * - TODO, FIXME로 할 일 표시
 * 
 * ❌ DON'T (하지 말아야 할 것):
 * - 명확한 코드를 굳이 설명하지 않기
 * - 주석이 코드와 달라지지 않도록 관리
 * - 주석으로 코드를 대체하지 않기
 */

